#!/usr/bin/python

import os, time
from optparse import OptionParser
from wk.rpc.server import WKServer
from wk.rpc.client import WKClient

def run_client(server, port, cmd, args):
    wkclient = WKClient()
    wkclient.set_proxy(server, port)
    try:
        t1 = time.time()
        wkclient.run_command(cmd, args)
        t2 = time.time()
    except KeyboardInterrupt, e:
        pass
    print "delay: " + str(t2 - t1)

def run_server(server, port):
    wkserver = WKServer()
    try:
        print "starting server"
        wkserver.start(server, port)
    except KeyboardInterrupt, e:
        # apoptosis
        os.system("kill -9 " + str(os.getpid()))

def main():
    parser = OptionParser(usage="usage: %prog [options]")
    parser.add_option("-m", "--mode", dest="mode", default="client",
                      help="use mode MODE (client|server)", metavar="MODE")
    parser.add_option("-s", "--server", dest="server", default="localhost",
                      help="hostname to connect")
    parser.add_option("-p", "--port", dest="port", default="8080",
                      help="port to connect or bind")
    parser.add_option("--sleep", dest="sleep_time", default=None,
                      help="seconds to sleep")
    parser.add_option("--hog", dest="hog_time", default=None,
                      help="seconds to hog")
    
    (options, args) = parser.parse_args()

    sleep_time = options.sleep_time
    hog_time = options.hog_time

    if (sleep_time is None and hog_time is None and options.mode=="client"):
        print "Please select at least one command to perform"
        parser.print_help()

    if (options.mode == "server"):
        run_server(options.server, options.port)
    elif (options.mode == "client"):
        if (sleep_time is not None):
            run_client(options.server, options.port, "sleep", {"time":float(sleep_time)})
        if (hog_time is not None):
            run_client(options.server, options.port, "hog", {"time":float(hog_time)})

    print "done"
            
if __name__=="__main__":
    main()